# Generated by Django 4.2.17 on 2025-01-14 12:07

from django.db import migrations


def associate_bookings_with_availability(apps, schema_editor):
    Booking = apps.get_model('bookings', 'Booking')
    Availability = apps.get_model('bookings', 'Availability')

    for booking in Booking.objects.all():
        try:
            #Logic to find the corresponding Availability
            availability = Availability.objects.get(
                court=booking.court,
                date=booking.booking_date,
                start_time=booking.booking_time
            )
            booking.availability = availability
            booking.save()
        except Availability.DoesNotExist:
            print(f"No Availability found for Booking ID: {booking.id}, Court: {booking.court}, Date: {booking.booking_date}, Time: {booking.booking_time}")
            # Handle the case where no matching Availability is found.
            # Options:
            # 1. Delete the booking: booking.delete()
            # 2. Set availability to None if you make it nullable: booking.availability = None; booking.save()
            # 3. Log the issue and leave the booking as is.

class Migration(migrations.Migration):

    dependencies = [
        ('bookings', '0005_rename_user_booking_booked_by_booking_availability_and_more'),
    ]

    operations = [
        migrations.RunPython(associate_bookings_with_availability),
    ]
